open empty: r
empty ? def -> concat: []

open append: a, b
append ? def -> concat: (ovTypeOf: a), [a, b]

open concat: r, xs
concat ? def -> fold: append, (empty: r), xs

empty ? r@SltList -> []
append ? ([] = a | a@SltList) & ([] = b | b@SltList) -> a .. b

empty ? r@SltString -> ""
append ? a@SltString & b@SltString -> a .. b

empty ? r@SltFunc -> id
append ? a@SltFunc & b@SltFunc -> a {.} b
