open unit: s, r
open bind: s, f

unit ? r@SltList -> [s]
bind ? s@SltList -> concat: &SltList, fmap: f, s

Compose <- {fc}

fmap ? s@Compose -> compose: (fmap: f) fmap s.fc
seq ? f@Compose & s@Compose -> compose: seq fmap' f.fc seq' s.fc

join: s <- s bind id

class mapM: f, r, xs
[] = xs -> unit: [], r
true -> (f: head: xs) bind \y -> (mapM: f, r, tail: xs) bind \ys -> unit: ([y] .. ys), r

mapM_: f, r, xs <- (mapM: f, r, xs) bind \unit: (), r