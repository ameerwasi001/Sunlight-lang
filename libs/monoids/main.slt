lib "*std"

-- Monoid modules
mod Monoids

Sum <- !{n}
Product <- !{n}

empty ? r@$Sum -> 0$sum
append ? a@$Sum & b@$Sum -> $sum: a.n+b.n

empty ? r@$Product -> 1$product
append ? a@$Product & b@$Product -> $product: a.n*b.n

AllTrue <- !{b}
AnyTrue <- !{b}

empty ? r@$AllTrue -> true$allTrue
append ? a@$AllTrue & b@$AllTrue -> $allTrue: a.b & b.b

empty ? r@$AnyTrue -> false$anyTrue
append ? a@$AnyTrue & b@$AnyTrue -> $anyTrue: a.b | b.b

LCmp <- {f}
empty ? r@$LCmp -> $lCmp: idf
append ? a@$LCmp & b@$LCmp -> $lCmp: a.f {|.} b.f

sumOn <- map: $sum
productOn <- map: $product
allTrueOn <- map: $allTrue
anyTrueOn <- map: $anyTrue
lCmpOn <- map: $lCmp